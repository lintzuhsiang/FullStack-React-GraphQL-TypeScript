import { useReducer as e, useMemo as t, useCallback as n, createElement as r } from "react";

import i from "react-ssr-prepass";

import { createClient as a, ssrExchange as o, dedupExchange as l, cacheExchange as u, fetchExchange as s, Provider as p } from "urql";

function _extends() {
  return (_extends = Object.assign || function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) {
        if (Object.prototype.hasOwnProperty.call(n, r)) {
          e[r] = n[r];
        }
      }
    }
    return e;
  }).apply(this, arguments);
}

var f = null;

function resetClient() {
  f = null;
}

function initUrqlClient(e, t) {
  var n = "undefined" == typeof window;
  if (n || !f) {
    (f = a(_extends({}, e, {
      suspense: t && (n || e.suspense)
    }))).toJSON = function() {
      return null;
    };
  }
  return f;
}

var v;

function withUrqlClient(a, f) {
  if (!f) {
    f = {};
  }
  return function(c) {
    var d = Boolean((c.getInitialProps || f.ssr) && !f.neverSuspend);
    var WithUrql = function(i) {
      var f = i.pageProps;
      var m = i.urqlClient;
      var q = i.urqlState;
      var C = function objectWithoutProperties(e, t) {
        var n = {};
        for (var r in e) {
          if (Object.prototype.hasOwnProperty.call(e, r) && -1 === t.indexOf(r)) {
            n[r] = e[r];
          }
        }
        return n;
      }(i, [ "pageProps", "urqlClient", "urqlState" ]);
      var h = e((function(e) {
        return e + 1;
      }), 0);
      var P = h[0];
      var g = h[1];
      var x = f && f.urqlState || q;
      var _ = t((function() {
        if (m && !P) {
          return m;
        }
        if (!v || "undefined" == typeof window) {
          v = o({
            initialState: x,
            isClient: !0
          });
        } else if (!P) {
          v.restoreData(x);
        }
        var e = a(v);
        if (!e.exchanges) {
          e.exchanges = [ l, u, v, s ];
        }
        return initUrqlClient(e, d);
      }), [ m, x, P ]);
      var w = n((function() {
        resetClient();
        v = o({
          initialState: void 0
        });
        g();
      }), []);
      return r(p, {
        value: _
      }, r(c, _extends({}, C, {
        pageProps: f,
        urqlClient: _,
        resetUrqlClient: w
      })));
    };
    WithUrql.displayName = "withUrqlClient(" + (c.displayName || c.name || "Component") + ")";
    if (c.getInitialProps || f.ssr) {
      WithUrql.getInitialProps = function(e) {
        try {
          function _temp4() {
            function _temp2() {
              return _extends({}, q, {
                urqlState: v ? v.extractData() : void 0,
                urqlClient: m
              });
            }
            if ("undefined" != typeof window) {
              return _extends({}, q, {
                urqlClient: m
              });
            }
            var e = _extends({}, q, {
              urqlClient: m
            });
            var a = n ? e : {
              pageProps: e
            };
            const o = function() {
              if (!f.neverSuspend) {
                return Promise.resolve(i(r(t, a))).then((function() {}));
              }
            }();
            return o && o.then ? o.then(_temp2) : _temp2();
          }
          var t = e.AppTree;
          var n = !!e.Component;
          var p = n ? e.ctx : e;
          var v = o({
            initialState: void 0
          });
          var d = a(v, p);
          if (!d.exchanges) {
            d.exchanges = [ l, u, v, s ];
          }
          var m = initUrqlClient(d, !f.neverSuspend);
          if (m) {
            p.urqlClient = m;
          }
          var q = {};
          const C = function() {
            if (c.getInitialProps) {
              return Promise.resolve(c.getInitialProps(e)).then((function(e) {
                q = e;
              }));
            }
          }();
          return Promise.resolve(C && C.then ? C.then(_temp4) : _temp4());
        } catch (e) {
          return Promise.reject(e);
        }
      };
    }
    return WithUrql;
  };
}

export { initUrqlClient, withUrqlClient };
//# sourceMappingURL=next-urql.es.js.map
